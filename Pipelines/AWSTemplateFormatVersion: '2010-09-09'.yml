AWSTemplateFormatVersion: '2010-09-09'

Parameters:
  LambdaFunctionName:
    Type: String
    Description: Name for the Lambda function

Resources:
  IrisApi:
    Type: 'AWS::ApiGatewayV2::Api'
    Properties:
      Name: IrisApi
      ProtocolType: HTTP
      Description: API for Iris classification

  IrisApiIntegration:
    Type: 'AWS::ApiGatewayV2::Integration'
    Properties:
      ApiId: !Ref IrisApi
      IntegrationType: AWS_PROXY
      IntegrationUri: !Sub 'arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${IrisLambdaFunction.Arn}/invocations'
      IntegrationMethod: POST
      PayloadFormatVersion: '2.0'

  IrisApiRoute:
    Type: 'AWS::ApiGatewayV2::Route'
    Properties:
      ApiId: !Ref IrisApi
      RouteKey: $default
      Target: !Sub 'integrations/${IrisApiIntegration.Id}'

  IrisApiStage:
    Type: 'AWS::ApiGatewayV2::Stage'
    Properties:
      ApiId: !Ref IrisApi
      StageName: 'prod'

  IrisLambdaFunction:
    Type: 'AWS::Lambda::Function'
    Properties:
      FunctionName: !Ref LambdaFunctionName
      Handler: 'index.handler'
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        S3Bucket: !Ref PipelineBucket
        S3Key: 'lambda-code.zip'
      Runtime: 'nodejs14.x'
      Timeout: 30

  LambdaExecutionRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: 'LambdaExecutionRole'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: 'Allow'
            Principal:
              Service: 'lambda.amazonaws.com'
            Action: 'sts:AssumeRole'
      Policies:
        - PolicyName: 'LambdaExecutionPolicy'
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: 'Allow'
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource: '*'

Outputs:
  IrisApiUrl:
    Description: 'URL of the deployed Iris Classifier API'
    Value: !Sub 'https://${IrisApi.ApiId}.execute-api.${AWS::Region}.amazonaws.com/prod'
